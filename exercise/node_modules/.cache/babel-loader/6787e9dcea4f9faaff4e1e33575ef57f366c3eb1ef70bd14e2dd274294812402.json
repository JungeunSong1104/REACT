{"ast":null,"code":"var _jsxFileName = \"C:\\\\REACT\\\\exercise\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react'; //useState는 hook임\nimport './styles.css';\n\n//1번\n// export default function App() {\n//   //React.useState();//이게 useState 의 완전한모습임\n//   const [price, setPrice] = useState(100); //컴포넌트 함수안에 useState를 설치해줘야함\n//   const changePricehndler = () => {//함수정의\n//    setPrice(75);//const 형태로 price를 저장했기 때문에 직접 값을 넣어줄수없음 오류가남 \n//    console.log(price);//버튼 눌렸을때 프라이스 값 출력하게 콘솔로보면 그 이전데이터가 먼저 나옴\n//   }//상태를 업데이트하기위한 세터함수는 리액트한테 적절한 타이밍에 호출해달라고하는거기때문에\n//   //즉시실행되지않음\n\n//   return (\n//         <div>\n//             <p>${price}</p>\n//             <button onClick={changePricehndler}>Apply Discount</button>\n//         </div>\n//     );//price를\n//     //on\n// }\n\n/////////////////////////////////////////////////////////////////////////////////////////\n\n//2번\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  //const [enteredText, setEnteredText] = useState(\"\");\n  //setEnteredText : enteredText 이변수의값을 변경할 함수\n  // useState(\"\"); 에서 \"\" 가 초기값\n  const [message, setMessage] = useState(\"\");\n  const messageHandler = event => {\n    const enteredText = event.target.value;\n    if (enteredText.trim().length >= 3) {\n      //if(event.target.value.trim().length>=3){\n      setMessage(\"Valid\");\n    } else {\n      setMessage(\"Invalid\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Your message\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      onChange: messageHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n};\n\n//정원코드\n// export default function App() {\n//   const [message, setMessage] = useState(\"\");\n\n//   let warningMessage = \"\";\n\n//   const messageCheckHandler = (event) => {\n//     setMessage(event.target.value);\n\n//   };\n\n//   if (message.trim().length >= 3) {\n//     warningMessage = \"Valid Message\";\n//   } else {\n//     warningMessage = \"Invalid Message\";\n//   }\n\n//   return (\n//       <form>\n//           <label>Your message</label>\n//           <input type=\"text\" onChange={messageCheckHandler} />\n//           <p>{warningMessage}</p>\n//       </form>\n//   );\n// }\n\n//유나코드\n// const App = () => {\n//     const [message, setMessage] = useState(\"\");\n//     let warn = \"invalid\";\n\n//     const messageHandler = (event) => {\n//         if(event.target.value.trim().length >= 3){\n//             setMessage(event.target.value);\n//             warn = \"valid\";\n//         }else{\n//             setMessage(\"\");\n//             warn = \"invalid\";\n//         }\n//     };\n//     return (\n//         <form>\n//             <label>Your message</label>\n//             <input type=\"text\" onChange={messageHandler}/>\n//             <p>{warn}</p>\n//         </form>\n//     );\n// };\n\n/////////////////////////////////////////////////////////////////////////////////////\n\n//3번\n// const App = () => {\n//     const [counter, setCount] = useState(0);\n\n//     const countHandler = () => {\n//         setCount(counter + 1)\n//     };\n\n//     return (\n//       <div>\n//         <p id=\"counter\">{counter}</p>\n//         <button onClick={countHandler}>Increment</button>\n//       </div>\n//     );\n// };\n\n// export default App;\n_s(App, \"EiOGSxO4GWQlH0sM782nQ9JwuAs=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App","_s","message","setMessage","messageHandler","event","enteredText","target","value","trim","length","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","_c","$RefreshReg$"],"sources":["C:/REACT/exercise/src/App.js"],"sourcesContent":["import React, { useState }  from 'react';//useState는 hook임\r\nimport './styles.css';\r\n\r\n//1번\r\n// export default function App() {\r\n//   //React.useState();//이게 useState 의 완전한모습임\r\n//   const [price, setPrice] = useState(100); //컴포넌트 함수안에 useState를 설치해줘야함\r\n//   const changePricehndler = () => {//함수정의\r\n//    setPrice(75);//const 형태로 price를 저장했기 때문에 직접 값을 넣어줄수없음 오류가남 \r\n//    console.log(price);//버튼 눌렸을때 프라이스 값 출력하게 콘솔로보면 그 이전데이터가 먼저 나옴\r\n//   }//상태를 업데이트하기위한 세터함수는 리액트한테 적절한 타이밍에 호출해달라고하는거기때문에\r\n//   //즉시실행되지않음\r\n  \r\n//   return (\r\n//         <div>\r\n//             <p>${price}</p>\r\n//             <button onClick={changePricehndler}>Apply Discount</button>\r\n//         </div>\r\n//     );//price를\r\n//     //on\r\n// }\r\n\r\n\r\n/////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n\r\n//2번\r\nconst App = () => {\r\n    //const [enteredText, setEnteredText] = useState(\"\");\r\n    //setEnteredText : enteredText 이변수의값을 변경할 함수\r\n    // useState(\"\"); 에서 \"\" 가 초기값\r\n    const [message, setMessage] = useState(\"\");\r\n\r\n    const messageHandler = (event) => {\r\n        const enteredText = event.target.value;\r\n        if(enteredText.trim().length>=3){\r\n        //if(event.target.value.trim().length>=3){\r\n            setMessage(\"Valid\");\r\n        }else{\r\n            setMessage(\"Invalid\");\r\n        }\r\n    };\r\n    return (\r\n        <form>\r\n            <label>Your message</label>\r\n            <input type=\"text\" onChange={messageHandler}/>\r\n            <p>{message}</p>\r\n        </form>\r\n    );\r\n};\r\n\r\n\r\n//정원코드\r\n// export default function App() {\r\n//   const [message, setMessage] = useState(\"\");\r\n  \r\n//   let warningMessage = \"\";\r\n\r\n//   const messageCheckHandler = (event) => {\r\n//     setMessage(event.target.value);\r\n    \r\n//   };\r\n  \r\n//   if (message.trim().length >= 3) {\r\n//     warningMessage = \"Valid Message\";\r\n//   } else {\r\n//     warningMessage = \"Invalid Message\";\r\n//   }\r\n\r\n//   return (\r\n//       <form>\r\n//           <label>Your message</label>\r\n//           <input type=\"text\" onChange={messageCheckHandler} />\r\n//           <p>{warningMessage}</p>\r\n//       </form>\r\n//   );\r\n// }\r\n\r\n\r\n//유나코드\r\n// const App = () => {\r\n//     const [message, setMessage] = useState(\"\");\r\n//     let warn = \"invalid\";\r\n\r\n//     const messageHandler = (event) => {\r\n//         if(event.target.value.trim().length >= 3){\r\n//             setMessage(event.target.value);\r\n//             warn = \"valid\";\r\n//         }else{\r\n//             setMessage(\"\");\r\n//             warn = \"invalid\";\r\n//         }\r\n//     };\r\n//     return (\r\n//         <form>\r\n//             <label>Your message</label>\r\n//             <input type=\"text\" onChange={messageHandler}/>\r\n//             <p>{warn}</p>\r\n//         </form>\r\n//     );\r\n// };\r\n\r\n\r\n\r\n/////////////////////////////////////////////////////////////////////////////////////\r\n\r\n\r\n//3번\r\n// const App = () => {\r\n//     const [counter, setCount] = useState(0);\r\n    \r\n//     const countHandler = () => {\r\n//         setCount(counter + 1)\r\n//     };\r\n\r\n//     return (\r\n//       <div>\r\n//         <p id=\"counter\">{counter}</p>\r\n//         <button onClick={countHandler}>Increment</button>\r\n//       </div>\r\n//     );\r\n// };\r\n\r\n// export default App;\r\n\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAS,OAAO,CAAC;AACzC,OAAO,cAAc;;AAErB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;;AAGA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACd;EACA;EACA;EACA,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAE1C,MAAMO,cAAc,GAAIC,KAAK,IAAK;IAC9B,MAAMC,WAAW,GAAGD,KAAK,CAACE,MAAM,CAACC,KAAK;IACtC,IAAGF,WAAW,CAACG,IAAI,CAAC,CAAC,CAACC,MAAM,IAAE,CAAC,EAAC;MAChC;MACIP,UAAU,CAAC,OAAO,CAAC;IACvB,CAAC,MAAI;MACDA,UAAU,CAAC,SAAS,CAAC;IACzB;EACJ,CAAC;EACD,oBACIJ,OAAA;IAAAY,QAAA,gBACIZ,OAAA;MAAAY,QAAA,EAAO;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eAC3BhB,OAAA;MAAOiB,IAAI,EAAC,MAAM;MAACC,QAAQ,EAAEb;IAAe;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eAC9ChB,OAAA;MAAAY,QAAA,EAAIT;IAAO;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACd,CAAC;AAEf,CAAC;;AAGD;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA;;AAGA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAAd,EAAA,CAhGMD,GAAG;AAAAkB,EAAA,GAAHlB,GAAG;AAAA,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}