{"ast":null,"code":"var _jsxFileName = \"C:\\\\REACT\\\\exercise\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport './styles.css';\n\n// don't change the Component name \"App\"\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  const [message, setMessage] = React.useState(\"\");\n  const [valid, setValid] = React.useState('invalid message');\n  const messageHandler = event => {\n    setMessage(event.target.value); //gpt에 따르면, 현재 인풋 요소에 입력된 값을 가져와서 \n    //message 상태를 업데이트.message는 항상 최신 입력값을 갖게 됨.\n\n    if (message.trim().length >= 3) {\n      setValid('valid message'); //setValid에 valid message를 넘겨준다는 뜻 \n    } else {\n      setValid(\"invalid\");\n    }\n    //  message.trim().length >= 3 ? setValid(\"valid message\"): setValid(\"invalid message\");\n    //->삼항 연산자로도 바꾼 것 \n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Your message\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      onChange: messageHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), \"  //\\uC5EC\\uAE30\\uC11C \\uBC1B\\uC740 \\uBA54\\uC2DC\\uC9C0\\uB97C \\uC704\\uC5D0 \\uC788\\uB294 \\uD568\\uC218\\uB85C \\uBCF4\\uB0C4\", /*#__PURE__*/_jsxDEV(\"p\", {\n      children: valid\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), \" //\\uC774 p\\uD0DC\\uADF8 \\uBD80\\uBD84\\uC774 \\uD654\\uBA74 \\uC0C1\\uC5D0\\uC11C \\uC720\\uD6A8\\uD55C \\uBA54\\uC2DC\\uC9C0\\uC778\\uC9C0 \\uD310\\uBCC4\\uD558\\uB294 \\uBD80\\uBD84\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"sN/1mTV1bC0Umd91rTIc2ZCeU7U=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","App","_s","message","setMessage","useState","valid","setValid","messageHandler","event","target","value","trim","length","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","_c","$RefreshReg$"],"sources":["C:/REACT/exercise/src/App.js"],"sourcesContent":["import React from 'react';\r\n\r\nimport './styles.css';\r\n\r\n// don't change the Component name \"App\"\r\nexport default function App() {\r\n\r\n  const [message, setMessage] = React.useState(\"\")\r\n  const [valid, setValid] = React.useState('invalid message');\r\n  const messageHandler = (event) =>{\r\n    setMessage(event.target.value); //gpt에 따르면, 현재 인풋 요소에 입력된 값을 가져와서 \r\n                        //message 상태를 업데이트.message는 항상 최신 입력값을 갖게 됨.\r\n\r\n    if(message.trim().length >= 3) { \r\n      setValid('valid message'); //setValid에 valid message를 넘겨준다는 뜻 \r\n    }else {\r\n      setValid(\"invalid\"); \r\n    }\r\n  //  message.trim().length >= 3 ? setValid(\"valid message\"): setValid(\"invalid message\");\r\n    //->삼항 연산자로도 바꾼 것 \r\n  }\r\n\r\n\r\n    return (\r\n        <form>\r\n            <label>Your message</label>\r\n            <input type=\"text\" onChange={messageHandler}/>  //여기서 받은 메시지를 위에 있는 함수로 보냄 \r\n            <p>{valid}</p> //이 p태그 부분이 화면 상에서 유효한 메시지인지 판별하는 부분 \r\n        </form>\r\n\r\n     \r\n    );\r\n}"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,OAAO,cAAc;;AAErB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,eAAe,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAE5B,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGN,KAAK,CAACO,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,KAAK,CAACO,QAAQ,CAAC,iBAAiB,CAAC;EAC3D,MAAMG,cAAc,GAAIC,KAAK,IAAI;IAC/BL,UAAU,CAACK,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IACZ;;IAEpB,IAAGR,OAAO,CAACS,IAAI,CAAC,CAAC,CAACC,MAAM,IAAI,CAAC,EAAE;MAC7BN,QAAQ,CAAC,eAAe,CAAC,CAAC,CAAC;IAC7B,CAAC,MAAK;MACJA,QAAQ,CAAC,SAAS,CAAC;IACrB;IACF;IACE;EACF,CAAC;;EAGC,oBACIP,OAAA;IAAAc,QAAA,gBACId,OAAA;MAAAc,QAAA,EAAO;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eAC3BlB,OAAA;MAAOmB,IAAI,EAAC,MAAM;MAACC,QAAQ,EAAEZ;IAAe;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,0HAC9C,eAAAlB,OAAA;MAAAc,QAAA,EAAIR;IAAK;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,sKAClB;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;AAIf;AAAChB,EAAA,CA3BuBD,GAAG;AAAAoB,EAAA,GAAHpB,GAAG;AAAA,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}