{"ast":null,"code":"var _jsxFileName = \"C:\\\\React200\\\\01-starting-setup\\\\src\\\\Components\\\\Expenses\\\\ExpenseItem.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\"; //추가로 { useState } 하나 더 임포트해주자\n//useState : \nimport \"./ExpenseItem.css\";\nimport ExpenseDate from \"./ExpenseDate\";\nimport Card from \"../UI/Card\";\n//card를 사용하고있음 그전에는 컴포넌트에 같이있었지만 지금은 ui에 있으니까\n//디렉토리가 한단계올라감\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ExpenseItem = props => {\n  _s();\n  const [title, setTitle] = useState(props.title); //초기값 정해줄수있음 props.title\n  //setTitle은 함수임 세터함수\n  //setTitle은title 변수값을 세팅하기위한 함수\n\n  //   const clickHandler = () =>{\n  //     console.log(\"clicked\");\n  //   };\n  const clickHandler = () => {\n    //title = \"Updated\";\n    console.log(\"button clicked\");\n  };\n  //가장기본적인 방식은 함수를 정희해주는것\n  //클릭이벤트처리해주는걸 중간에 jsx코드에 자바스크립트 코드 끼워넣는건 매우 안좋은방법\n  //가장추천하는방식 : 함수를 만들어주는것\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: \"expense-item\",\n    children: [/*#__PURE__*/_jsxDEV(ExpenseDate, {\n      date: props.date\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"expense-item__description\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"expense-item__price\",\n      children: [\"$\", props.amount]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: clickHandler,\n      children: \"Change title\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n  //함수는 익명함수가 될수도 내가 정의한 함수가 될수도있음\n  //많이 하는 실수 : 함수뒤에 ()를 다는것 {clickHandler}() \n  //이렇게 쓰면 읽어 드릴 때 위에서부터 읽어들이다가 메모리 어딘가에\n  //클릭핸들러라는 이름으로 만들어 놓음\n  //쭉 내려가다가 clickHandler()를 만나는 순간 온클릭이라는 행위를 했을때\n  //자바스크립트는 쭉 내려가다가 이 구문 자체를 evaluate을 함\n  //자바스크립트가 코드를 읽어들이고 해석한다는 소리는 평가를 한다는 뜻 \n  //하나하나의 코드를 실행할수있으면 실행해버린다는것\n  //특정 이벤트에 함수를 할당할때 주의해야함\n};\n_s(ExpenseItem, \"ceUz0wjPP/oTY3+evv2xH5hljW4=\");\n_c = ExpenseItem;\nexport default ExpenseItem;\n//각각의 컴포넌트는 결국 \n//함수는 누군가가 실행을 해줘야함\n//함수는 언제실행이되는가 : \n//컴포넌트 안의 함수들을 직접 실행한적은 한번도 없음\n//이것들을 실행하는 타이밍  : 인덱스코드가 먼저 실행되고 리액트돔크리에이트를\n//이용해서 루트객체를 찾은다음에 루트를 만든다음에 앱컴포넌트를 실행함\n//여기서부터 앱함수가 실행되는것\n//릴액트도 결국 자스 라이브러리기 때문에 <App />컴포넌트가 실행이되고\n//익스펜시스 -> 익스펜스아이템/익스펜스데이트 순차적로 호출이됨\n//리턴을 할때 jsx코드를 만들어서 돌려줌\nvar _c;\n$RefreshReg$(_c, \"ExpenseItem\");","map":{"version":3,"names":["React","useState","ExpenseDate","Card","jsxDEV","_jsxDEV","ExpenseItem","props","_s","title","setTitle","clickHandler","console","log","className","children","date","fileName","_jsxFileName","lineNumber","columnNumber","amount","onClick","_c","$RefreshReg$"],"sources":["C:/React200/01-starting-setup/src/Components/Expenses/ExpenseItem.js"],"sourcesContent":["import React, { useState } from \"react\";//추가로 { useState } 하나 더 임포트해주자\r\n//useState : \r\nimport \"./ExpenseItem.css\";\r\nimport ExpenseDate from \"./ExpenseDate\";\r\nimport Card from \"../UI/Card\";\r\n//card를 사용하고있음 그전에는 컴포넌트에 같이있었지만 지금은 ui에 있으니까\r\n//디렉토리가 한단계올라감\r\n\r\n\r\nconst ExpenseItem = (props) => {\r\n  const [title, setTitle] = useState(props.title);//초기값 정해줄수있음 props.title\r\n  //setTitle은 함수임 세터함수\r\n  //setTitle은title 변수값을 세팅하기위한 함수\r\n  \r\n//   const clickHandler = () =>{\r\n//     console.log(\"clicked\");\r\n//   };\r\n  const clickHandler = () => {\r\n    //title = \"Updated\";\r\n    console.log(\"button clicked\");\r\n  }\r\n  //가장기본적인 방식은 함수를 정희해주는것\r\n  //클릭이벤트처리해주는걸 중간에 jsx코드에 자바스크립트 코드 끼워넣는건 매우 안좋은방법\r\n  //가장추천하는방식 : 함수를 만들어주는것\r\n\r\n  return (\r\n    <Card className=\"expense-item\">\r\n        {/* <div className=\"\">{props.date.toLocaleDateString()}</div> */}\r\n        <ExpenseDate date={props.date} />\r\n        <div className=\"expense-item__description\">\r\n          <h2>{title}</h2>\r\n        </div>\r\n        <div className=\"expense-item__price\">${props.amount}</div>\r\n        <button onClick={clickHandler}>Change title</button>\r\n    </Card>\r\n  );\r\n  //함수는 익명함수가 될수도 내가 정의한 함수가 될수도있음\r\n  //많이 하는 실수 : 함수뒤에 ()를 다는것 {clickHandler}() \r\n  //이렇게 쓰면 읽어 드릴 때 위에서부터 읽어들이다가 메모리 어딘가에\r\n  //클릭핸들러라는 이름으로 만들어 놓음\r\n  //쭉 내려가다가 clickHandler()를 만나는 순간 온클릭이라는 행위를 했을때\r\n  //자바스크립트는 쭉 내려가다가 이 구문 자체를 evaluate을 함\r\n  //자바스크립트가 코드를 읽어들이고 해석한다는 소리는 평가를 한다는 뜻 \r\n  //하나하나의 코드를 실행할수있으면 실행해버린다는것\r\n  //특정 이벤트에 함수를 할당할때 주의해야함\r\n  \r\n};\r\n\r\nexport default ExpenseItem;\r\n//각각의 컴포넌트는 결국 \r\n//함수는 누군가가 실행을 해줘야함\r\n//함수는 언제실행이되는가 : \r\n//컴포넌트 안의 함수들을 직접 실행한적은 한번도 없음\r\n//이것들을 실행하는 타이밍  : 인덱스코드가 먼저 실행되고 리액트돔크리에이트를\r\n//이용해서 루트객체를 찾은다음에 루트를 만든다음에 앱컴포넌트를 실행함\r\n//여기서부터 앱함수가 실행되는것\r\n//릴액트도 결국 자스 라이브러리기 때문에 <App />컴포넌트가 실행이되고\r\n//익스펜시스 -> 익스펜스아이템/익스펜스데이트 순차적로 호출이됨\r\n//리턴을 할때 jsx코드를 만들어서 돌려줌\r\n\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO,CAAC;AACxC;AACA,OAAO,mBAAmB;AAC1B,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAOC,IAAI,MAAM,YAAY;AAC7B;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAGA,MAAMC,WAAW,GAAIC,KAAK,IAAK;EAAAC,EAAA;EAC7B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAACM,KAAK,CAACE,KAAK,CAAC,CAAC;EAChD;EACA;;EAEF;EACA;EACA;EACE,MAAME,YAAY,GAAGA,CAAA,KAAM;IACzB;IACAC,OAAO,CAACC,GAAG,CAAC,gBAAgB,CAAC;EAC/B,CAAC;EACD;EACA;EACA;;EAEA,oBACER,OAAA,CAACF,IAAI;IAACW,SAAS,EAAC,cAAc;IAAAC,QAAA,gBAE1BV,OAAA,CAACH,WAAW;MAACc,IAAI,EAAET,KAAK,CAACS;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACjCf,OAAA;MAAKS,SAAS,EAAC,2BAA2B;MAAAC,QAAA,eACxCV,OAAA;QAAAU,QAAA,EAAKN;MAAK;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACb,CAAC,eACNf,OAAA;MAAKS,SAAS,EAAC,qBAAqB;MAAAC,QAAA,GAAC,GAAC,EAACR,KAAK,CAACc,MAAM;IAAA;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eAC1Df,OAAA;MAAQiB,OAAO,EAAEX,YAAa;MAAAI,QAAA,EAAC;IAAY;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClD,CAAC;EAET;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AAEF,CAAC;AAACZ,EAAA,CArCIF,WAAW;AAAAiB,EAAA,GAAXjB,WAAW;AAuCjB,eAAeA,WAAW;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}