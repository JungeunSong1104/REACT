{"ast":null,"code":"var _jsxFileName = \"C:\\\\REACT\\\\01-starting-setup\\\\src\\\\App.js\";\nimport React, { useState } from \"react\";\n// import ExpenseItem from \"./components/ExpenseItem\";\nimport Expenses from \"./Components/Expenses/Expenses\";\n//js를 가져오는것 css는 뒤에 꼭 .css를 붙임\nimport NewExpense from \"./Components/NewExpenses/NewExpense\";\n\n//export default function App() {\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  //fuction과 화살표함수는 스타일차이라고 보면됨?\n  //익명함수를 사용하는 습관화되어있는 다른 프로그래머들의 라이브러리를 보고\n  //익숙하지않은 사람들은 못받아들일수있음\n  //App이라는 이름의 상수변수를 하나 만든것 거기에 익명함수를 만들어서 저장을한거임\n  //함수가 적혀있는 공간이 어딘가에 있겠지 메모리 어딘가에 있는 공간의 주소를\n  //상수 변수에 담아주는것 함수의 이름이 필요할때 주소가들어있는 상수이름을\n  //쓰거나 함수 호출을 할때 App() 이런식으로 함수를 호출하게됨\n  //함수를 만드는 행위자체를 단축화한거나마찬가지\n  //const expenses = [\n  const DUMMY_EXPENSES = [{\n    id: \"e1\",\n    title: \"Toilet Paper\",\n    amount: 94.12,\n    date: new Date(2020, 7, 14)\n  }, {\n    id: \"e2\",\n    title: \"New TV\",\n    amount: 799.49,\n    date: new Date(2021, 2, 12)\n  }, {\n    id: \"e3\",\n    title: \"Car Insurance\",\n    amount: 294.67,\n    date: new Date(2021, 2, 28)\n  }, {\n    id: \"e4\",\n    title: \"New Desk (Wooden)\",\n    amount: 450,\n    date: new Date(2021, 5, 12)\n  }];\n\n  // return (React.createElement('div', {},\n  // React.createElement('h2', {}, \"Let's get Started\"),\n  // React.createElement(Expenses, {expenses:expenses}))\n  /*\n  괄호안에 필요한 개수만큼 넣을수있음\n  괄호안에 객체형태로 전달이됨\n  커스텀 컴포넌트 같은 경우에는 소괄호로 안묶어줘도됨\n  */\n  // );\n\n  const addExpenseHandler = expense => {\n    console.log(\"In App.js\");\n    console.log(expense);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(NewExpense, {\n      onAddExpense: addExpenseHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Expenses, {\n      items: expenses\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Expenses","NewExpense","jsxDEV","_jsxDEV","App","DUMMY_EXPENSES","id","title","amount","date","Date","addExpenseHandler","expense","console","log","children","onAddExpense","fileName","_jsxFileName","lineNumber","columnNumber","items","expenses","_c","$RefreshReg$"],"sources":["C:/REACT/01-starting-setup/src/App.js"],"sourcesContent":["import React, {useState} from \"react\";\n// import ExpenseItem from \"./components/ExpenseItem\";\nimport Expenses from \"./Components/Expenses/Expenses\";\n//js를 가져오는것 css는 뒤에 꼭 .css를 붙임\nimport NewExpense from \"./Components/NewExpenses/NewExpense\";\n\n//export default function App() {\nconst App = () => {\n  //fuction과 화살표함수는 스타일차이라고 보면됨?\n  //익명함수를 사용하는 습관화되어있는 다른 프로그래머들의 라이브러리를 보고\n  //익숙하지않은 사람들은 못받아들일수있음\n  //App이라는 이름의 상수변수를 하나 만든것 거기에 익명함수를 만들어서 저장을한거임\n  //함수가 적혀있는 공간이 어딘가에 있겠지 메모리 어딘가에 있는 공간의 주소를\n  //상수 변수에 담아주는것 함수의 이름이 필요할때 주소가들어있는 상수이름을\n  //쓰거나 함수 호출을 할때 App() 이런식으로 함수를 호출하게됨\n  //함수를 만드는 행위자체를 단축화한거나마찬가지\n  //const expenses = [\n  const DUMMY_EXPENSES = [\n    {\n      id: \"e1\",\n      title: \"Toilet Paper\",\n      amount: 94.12,\n      date: new Date(2020, 7, 14),\n    },\n    {\n      id: \"e2\",\n      title: \"New TV\",\n      amount: 799.49,\n      date: new Date(2021, 2, 12),\n    },\n    {\n      id: \"e3\",\n      title: \"Car Insurance\",\n      amount: 294.67,\n      date: new Date(2021, 2, 28),\n    },\n    {\n      id: \"e4\",\n      title: \"New Desk (Wooden)\",\n      amount: 450,\n      date: new Date(2021, 5, 12),\n    },\n  ];\n\n  // return (React.createElement('div', {},\n  // React.createElement('h2', {}, \"Let's get Started\"),\n  // React.createElement(Expenses, {expenses:expenses}))\n  /*\n  괄호안에 필요한 개수만큼 넣을수있음\n  괄호안에 객체형태로 전달이됨\n  커스텀 컴포넌트 같은 경우에는 소괄호로 안묶어줘도됨\n  */\n  // );\n\n  const addExpenseHandler = (expense) => {\n    console.log(\"In App.js\");\n    console.log(expense);\n  };\n  return (\n    <div>\n      <NewExpense onAddExpense={addExpenseHandler} />\n      <Expenses items={expenses} />{/* 출력을 담당하는 Expenses */}\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AACrC;AACA,OAAOC,QAAQ,MAAM,gCAAgC;AACrD;AACA,OAAOC,UAAU,MAAM,qCAAqC;;AAE5D;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAChB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,MAAMC,cAAc,GAAG,CACrB;IACEC,EAAE,EAAE,IAAI;IACRC,KAAK,EAAE,cAAc;IACrBC,MAAM,EAAE,KAAK;IACbC,IAAI,EAAE,IAAIC,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,EAAE;EAC5B,CAAC,EACD;IACEJ,EAAE,EAAE,IAAI;IACRC,KAAK,EAAE,QAAQ;IACfC,MAAM,EAAE,MAAM;IACdC,IAAI,EAAE,IAAIC,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,EAAE;EAC5B,CAAC,EACD;IACEJ,EAAE,EAAE,IAAI;IACRC,KAAK,EAAE,eAAe;IACtBC,MAAM,EAAE,MAAM;IACdC,IAAI,EAAE,IAAIC,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,EAAE;EAC5B,CAAC,EACD;IACEJ,EAAE,EAAE,IAAI;IACRC,KAAK,EAAE,mBAAmB;IAC1BC,MAAM,EAAE,GAAG;IACXC,IAAI,EAAE,IAAIC,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,EAAE;EAC5B,CAAC,CACF;;EAED;EACA;EACA;EACA;AACF;AACA;AACA;AACA;EACE;;EAEA,MAAMC,iBAAiB,GAAIC,OAAO,IAAK;IACrCC,OAAO,CAACC,GAAG,CAAC,WAAW,CAAC;IACxBD,OAAO,CAACC,GAAG,CAACF,OAAO,CAAC;EACtB,CAAC;EACD,oBACET,OAAA;IAAAY,QAAA,gBACEZ,OAAA,CAACF,UAAU;MAACe,YAAY,EAAEL;IAAkB;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC/CjB,OAAA,CAACH,QAAQ;MAACqB,KAAK,EAAEC;IAAS;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC1B,CAAC;AAEV,CAAC;AAACG,EAAA,GAzDInB,GAAG;AA2DT,eAAeA,GAAG;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}