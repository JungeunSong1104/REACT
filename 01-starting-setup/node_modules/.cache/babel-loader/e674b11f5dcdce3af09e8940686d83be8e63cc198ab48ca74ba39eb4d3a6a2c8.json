{"ast":null,"code":"var _jsxFileName = \"C:\\\\REACT\\\\01-starting-setup\\\\src\\\\Components\\\\NewExpenses\\\\ExpenseForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./ExpenseForm.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ExpenseForm = () => {\n  _s();\n  // document.getElementById('').addEventListener('click', (event) => {})\n  // 자바스크립트에서는 이런식으로 했었음\n\n  useState(''); //useState 컴포넌트 안에서 호출? 해줘야함?\n  const titleChangedHandler = event => {\n    //event라는 prop이 전달됨\n    console.log(event.target.value); //evemt가 가진 타겟 객체의 밸류값을 보자\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"new-expense__controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-expense__control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          onChange: titleChangedHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-expense__control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Amount\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          min: \"0.01\",\n          step: \"0.01\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-expense__control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          min: \"2019-01-10\",\n          step: \"2022-12-31\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"new-expense__actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add Expense\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n};\n_s(ExpenseForm, \"v2x6wirwKCy++9DuW8s383qRkbI=\");\n_c = ExpenseForm;\nexport default ExpenseForm;\nvar _c;\n$RefreshReg$(_c, \"ExpenseForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","ExpenseForm","_s","titleChangedHandler","event","console","log","target","value","children","className","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","min","step","_c","$RefreshReg$"],"sources":["C:/REACT/01-starting-setup/src/Components/NewExpenses/ExpenseForm.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./ExpenseForm.css\";\r\n\r\nconst ExpenseForm = () => {\r\n    // document.getElementById('').addEventListener('click', (event) => {})\r\n    // 자바스크립트에서는 이런식으로 했었음\r\n    \r\n    useState('');//useState 컴포넌트 안에서 호출? 해줘야함?\r\n    const titleChangedHandler = (event) => {//event라는 prop이 전달됨\r\n        console.log(event.target.value);//evemt가 가진 타겟 객체의 밸류값을 보자\r\n    };\r\n    return(\r\n    <form>\r\n        <div className=\"new-expense__controls\">\r\n            <div className=\"new-expense__control\">\r\n                <label>Title</label>\r\n                <input type=\"text\" onChange={titleChangedHandler} />\r\n                {/* 중괄호안에 익명함수를 넣을수도있지만 추천하는 방법은 아님\r\n                여기서 굳이 익명함수를 쓰면 모든 디브들에 전부 익명함수를 붙여넣어야\r\n                하기때문에 함수를 따로 만들고*/}\r\n            </div>{/* 텍스트 입력 받는 부분*/}\r\n            {/* 타이틀이 변할때, 어마운트가변할때, 데이트가 변할때 데이터를 받아서 \r\n            처리할 거기 때문에 onInput이라는 이벤트가 발생하지않음..?\r\n            on은 기본적으로 입력이 된다는 것은 입력란이 변한다는거니까 change를 쓰자*/}\r\n\r\n            <div className=\"new-expense__control\">\r\n                <label>Amount</label>\r\n                <input type=\"number\" min=\"0.01\" step=\"0.01\"></input>\r\n            </div>{/* 넘버 입력 받는 부분*/}\r\n\r\n            <div className=\"new-expense__control\">\r\n                <label>Date</label>\r\n                <input type=\"date\" min=\"2019-01-10\" step=\"2022-12-31\" />\r\n            </div>{/* 넘버 입력 받는 부분 / type=\"date\" 자동으로.. 날짜설정해주나?*/}\r\n            </div>\r\n            <div className=\"new-expense__actions\">\r\n                <button type=\"submit\">Add Expense</button>\r\n            </div>\r\n        \r\n    </form>\r\n    );\r\n};\r\n\r\nexport default ExpenseForm; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3B,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB;EACA;;EAEAJ,QAAQ,CAAC,EAAE,CAAC,CAAC;EACb,MAAMK,mBAAmB,GAAIC,KAAK,IAAK;IAAC;IACpCC,OAAO,CAACC,GAAG,CAACF,KAAK,CAACG,MAAM,CAACC,KAAK,CAAC,CAAC;EACpC,CAAC;;EACD,oBACAR,OAAA;IAAAS,QAAA,gBACIT,OAAA;MAAKU,SAAS,EAAC,uBAAuB;MAAAD,QAAA,gBAClCT,OAAA;QAAKU,SAAS,EAAC,sBAAsB;QAAAD,QAAA,gBACjCT,OAAA;UAAAS,QAAA,EAAO;QAAK;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACpBd,OAAA;UAAOe,IAAI,EAAC,MAAM;UAACC,QAAQ,EAAEb;QAAoB;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAInD,CAAC,eAKNd,OAAA;QAAKU,SAAS,EAAC,sBAAsB;QAAAD,QAAA,gBACjCT,OAAA;UAAAS,QAAA,EAAO;QAAM;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACrBd,OAAA;UAAOe,IAAI,EAAC,QAAQ;UAACE,GAAG,EAAC,MAAM;UAACC,IAAI,EAAC;QAAM;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnD,CAAC,eAENd,OAAA;QAAKU,SAAS,EAAC,sBAAsB;QAAAD,QAAA,gBACjCT,OAAA;UAAAS,QAAA,EAAO;QAAI;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACnBd,OAAA;UAAOe,IAAI,EAAC,MAAM;UAACE,GAAG,EAAC,YAAY;UAACC,IAAI,EAAC;QAAY;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvD,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC,eACNd,OAAA;MAAKU,SAAS,EAAC,sBAAsB;MAAAD,QAAA,eACjCT,OAAA;QAAQe,IAAI,EAAC,QAAQ;QAAAN,QAAA,EAAC;MAAW;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAER,CAAC;AAEX,CAAC;AAACZ,EAAA,CAtCID,WAAW;AAAAkB,EAAA,GAAXlB,WAAW;AAwCjB,eAAeA,WAAW;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}