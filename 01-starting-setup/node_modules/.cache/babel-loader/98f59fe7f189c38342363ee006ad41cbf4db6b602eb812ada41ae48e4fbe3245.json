{"ast":null,"code":"var _jsxFileName = \"C:\\\\REACT\\\\01-starting-setup\\\\src\\\\Components\\\\Chart\\\\ChartBar.js\";\nimport React from \"react\";\nimport \"./ChartBar.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChartBar = props => {\n  let barFillHeight = \"0%\";\n  if (props.max > 0) {\n    //props를 통해 max값도 넘어옴\n    barFillHeight = Math.round(props.value / props.maxValue * 100) + \"%\";\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chart-bar\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart-bar__inner\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"char-bar__fill\",\n        style: {\n          height: barFillHeight\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart-bar__label\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 9\n  }, this);\n};\n_c = ChartBar;\nexport default ChartBar;\nvar _c;\n$RefreshReg$(_c, \"ChartBar\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","ChartBar","props","barFillHeight","max","Math","round","value","maxValue","className","children","style","height","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/REACT/01-starting-setup/src/Components/Chart/ChartBar.js"],"sourcesContent":["import React from \"react\";\r\nimport \"./ChartBar.css\";\r\n\r\nconst ChartBar = (props) => {\r\n    let barFillHeight = \"0%\";\r\n\r\n    if(props.max > 0){//props를 통해 max값도 넘어옴\r\n        barFillHeight = Math.round((props.value / props.maxValue)*100)+\"%\";\r\n    }\r\n    return(\r\n        <div className=\"chart-bar\">{/* 바 */}\r\n            <div className=\"chart-bar__inner\">{/* 외곽선*/}\r\n                <div className=\"char-bar__fill\" style={{height : barFillHeight}}></div>{/* 채움(fill)*/}\r\n                {/* 여기서 style은 react에서 사용한 style prop임 css style이랑 비슷하지만\r\n                문자형태로 객체를 저장해서? 그래서 중괄호로 다시한번감싸줌 style={{height : barFillHeight}}\r\n                style={{height : barFillHeight, backgroundColor : 'red'}} 속성을 여러개 쓰고싶을때는\r\n                , 쓰고 뒤에 이어씀?\r\n                key의 형태로 사용할때는 backgroundColor 이렇게 -대신 카멜케이스로 표시함\r\n                style={\"height:10%\"} 이렇게 해주는 것 보다 여러개의 스타일을 적용시켜주기위해\r\n                변수를 대입하듯이? 속성을? 사용함?\r\n                퍼센테이지만큼 바의 높이를 정해줌?\r\n                */}\r\n            </div>\r\n            <div className=\"chart-bar__label\"></div>{/* 몇 월인지 써줘야하니까*/}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ChartBar;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExB,MAAMC,QAAQ,GAAIC,KAAK,IAAK;EACxB,IAAIC,aAAa,GAAG,IAAI;EAExB,IAAGD,KAAK,CAACE,GAAG,GAAG,CAAC,EAAC;IAAC;IACdD,aAAa,GAAGE,IAAI,CAACC,KAAK,CAAEJ,KAAK,CAACK,KAAK,GAAGL,KAAK,CAACM,QAAQ,GAAE,GAAG,CAAC,GAAC,GAAG;EACtE;EACA,oBACIR,OAAA;IAAKS,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACtBV,OAAA;MAAKS,SAAS,EAAC,kBAAkB;MAAAC,QAAA,eAC7BV,OAAA;QAAKS,SAAS,EAAC,gBAAgB;QAACE,KAAK,EAAE;UAACC,MAAM,EAAGT;QAAa;MAAE;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAUtE,CAAC,eACNhB,OAAA;MAAKS,SAAS,EAAC;IAAkB;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACvC,CAAC;AAEd,CAAC;AAACC,EAAA,GAvBIhB,QAAQ;AAyBd,eAAeA,QAAQ;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}