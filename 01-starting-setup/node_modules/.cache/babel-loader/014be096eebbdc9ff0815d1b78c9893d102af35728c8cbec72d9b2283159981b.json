{"ast":null,"code":"var _jsxFileName = \"C:\\\\REACT\\\\01-starting-setup\\\\src\\\\Components\\\\Expenses\\\\ExpensesChart.js\";\nimport React from \"react\";\nimport Chart from \"../Chart/Chart\"; //여기에서 차트를 표현해줘야하니까 차트 임포트해줌\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ExpensesChart = props => {\n  const chartDataPoints = [\n  //chartDataPoints : 배열 하나 만듦\n  {\n    label: 'Jan',\n    value: 0\n  }, {\n    label: 'Feb',\n    value: 0\n  }, {\n    label: 'Mar',\n    value: 0\n  }, {\n    label: 'Apr',\n    value: 0\n  }, {\n    label: 'May',\n    value: 0\n  }, {\n    label: 'Jun',\n    value: 0\n  }, {\n    label: 'Jul',\n    value: 0\n  }, {\n    label: 'Aug',\n    value: 0\n  }, {\n    label: 'Sep',\n    value: 0\n  }, {\n    label: 'Oct',\n    value: 0\n  }, {\n    label: 'Nov',\n    value: 0\n  }, {\n    label: 'Dec',\n    value: 0\n  }];\n  for (const expense in props.expenses) {\n    /* props.expenses각연도에해당하는모든데이터가다들어가있음 \r\n    하나하나씩 expenses에 넘김 넘겨받은 데이터는 date라는 key 를 가짐 \r\n    월데이터를 expensMonth에 넣음 expensMonth는 월 데이터가 됨 \r\n    expensMonth를 요소번호로 이용해서 */\n    const expenseMonth = expense.date.getMonth();\n    chartDataPoints[expenseMonth].value += expense.amount;\n  }\n  return /*#__PURE__*/_jsxDEV(Chart, {\n    dataPoints: chartDataPoints\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 12\n  }, this); //배열 chartDataPoints를 넘겨줌\n};\n_c = ExpensesChart;\nexport default ExpensesChart; //데이터를 취합\nvar _c;\n$RefreshReg$(_c, \"ExpensesChart\");","map":{"version":3,"names":["React","Chart","jsxDEV","_jsxDEV","ExpensesChart","props","chartDataPoints","label","value","expense","expenses","expenseMonth","date","getMonth","amount","dataPoints","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/REACT/01-starting-setup/src/Components/Expenses/ExpensesChart.js"],"sourcesContent":["import React from \"react\";\r\nimport Chart from \"../Chart/Chart\";//여기에서 차트를 표현해줘야하니까 차트 임포트해줌\r\n\r\nconst ExpensesChart = (props) => {\r\n    const chartDataPoints = [//chartDataPoints : 배열 하나 만듦\r\n        { label: 'Jan', value: 0},\r\n        { label: 'Feb', value: 0},\r\n        { label: 'Mar', value: 0},\r\n        { label: 'Apr', value: 0},\r\n        { label: 'May', value: 0},\r\n        { label: 'Jun', value: 0},\r\n        { label: 'Jul', value: 0},\r\n        { label: 'Aug', value: 0},\r\n        { label: 'Sep', value: 0},\r\n        { label: 'Oct', value: 0},\r\n        { label: 'Nov', value: 0},\r\n        { label: 'Dec', value: 0},\r\n    ];\r\n\r\n    for(const expense in props.expenses) {\r\n    /* props.expenses각연도에해당하는모든데이터가다들어가있음 \r\n    하나하나씩 expenses에 넘김 넘겨받은 데이터는 date라는 key 를 가짐 \r\n    월데이터를 expensMonth에 넣음 expensMonth는 월 데이터가 됨 \r\n    expensMonth를 요소번호로 이용해서 */\r\n        const expenseMonth = expense.date.getMonth();\r\n        chartDataPoints[expenseMonth].value += expense.amount;\r\n    }\r\n    return <Chart dataPoints={chartDataPoints} />;//배열 chartDataPoints를 넘겨줌\r\n};\r\n\r\n\r\nexport default ExpensesChart;//데이터를 취합\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,gBAAgB,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEnC,MAAMC,aAAa,GAAIC,KAAK,IAAK;EAC7B,MAAMC,eAAe,GAAG;EAAC;EACrB;IAAEC,KAAK,EAAE,KAAK;IAAEC,KAAK,EAAE;EAAC,CAAC,EACzB;IAAED,KAAK,EAAE,KAAK;IAAEC,KAAK,EAAE;EAAC,CAAC,EACzB;IAAED,KAAK,EAAE,KAAK;IAAEC,KAAK,EAAE;EAAC,CAAC,EACzB;IAAED,KAAK,EAAE,KAAK;IAAEC,KAAK,EAAE;EAAC,CAAC,EACzB;IAAED,KAAK,EAAE,KAAK;IAAEC,KAAK,EAAE;EAAC,CAAC,EACzB;IAAED,KAAK,EAAE,KAAK;IAAEC,KAAK,EAAE;EAAC,CAAC,EACzB;IAAED,KAAK,EAAE,KAAK;IAAEC,KAAK,EAAE;EAAC,CAAC,EACzB;IAAED,KAAK,EAAE,KAAK;IAAEC,KAAK,EAAE;EAAC,CAAC,EACzB;IAAED,KAAK,EAAE,KAAK;IAAEC,KAAK,EAAE;EAAC,CAAC,EACzB;IAAED,KAAK,EAAE,KAAK;IAAEC,KAAK,EAAE;EAAC,CAAC,EACzB;IAAED,KAAK,EAAE,KAAK;IAAEC,KAAK,EAAE;EAAC,CAAC,EACzB;IAAED,KAAK,EAAE,KAAK;IAAEC,KAAK,EAAE;EAAC,CAAC,CAC5B;EAED,KAAI,MAAMC,OAAO,IAAIJ,KAAK,CAACK,QAAQ,EAAE;IACrC;AACJ;AACA;AACA;IACQ,MAAMC,YAAY,GAAGF,OAAO,CAACG,IAAI,CAACC,QAAQ,CAAC,CAAC;IAC5CP,eAAe,CAACK,YAAY,CAAC,CAACH,KAAK,IAAIC,OAAO,CAACK,MAAM;EACzD;EACA,oBAAOX,OAAA,CAACF,KAAK;IAACc,UAAU,EAAET;EAAgB;IAAAU,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC,CAAC;AAClD,CAAC;AAACC,EAAA,GAzBIhB,aAAa;AA4BnB,eAAeA,aAAa,CAAC;AAAA,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}