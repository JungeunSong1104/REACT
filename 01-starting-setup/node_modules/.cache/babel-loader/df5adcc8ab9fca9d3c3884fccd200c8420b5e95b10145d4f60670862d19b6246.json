{"ast":null,"code":"var _jsxFileName = \"C:\\\\REACT\\\\01-starting-setup\\\\src\\\\Components\\\\NewExpenses\\\\NewExpense.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport ExpenseForm from \"./ExpenseForm\";\nimport \"./NewExpense.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NewExpense = props => {\n  _s();\n  const [isEditing, setisEditing] = useState(false);\n  //처음 화면 떴을 때 입력창 없이 add new expense 버튼만 보여야함 그래서 초기값 false로 줌\n  const saveExpensedataHandler = enteredExpenseData => {\n    /* 입력된 enteredExpenseData가 여기에 저장됨 enteredExpenseData 라는 이름을 보면 \r\n       입력한 데이터를 여기에 전달해준다는걸알수있음 \r\n    */\n    const expenseData = {\n      ...enteredExpenseData,\n      //매개변수로 받은걸 스프레드 연산자를 이용해서 뿌려줌\n      id: Math.random().toString() //나중을 위해 아이디 하나 추가해줌\n    };\n\n    props.onAddExpense(expenseData); //완성된 데이터인 expenseData를 매개변수로 넘겨줌\n    setisEditing(false);\n  };\n\n  //버튼눌렀을 때 동작할 핸들러\n  const StartEditingHandler = () => {\n    setisEditing(true);\n  };\n  const stopEditingHandler = () => {\n    setisEditing(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"new-expense\",\n    children: [!isEditing && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: StartEditingHandler,\n      children: \"Add new Expense\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 22\n    }, this), isEditing && /*#__PURE__*/_jsxDEV(ExpenseForm, {\n      onSaveExpenseData: saveExpensedataHandler,\n      onCancel: stopEditingHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 20\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n  /*\r\n    여기에 onSaveExpenseSate라고 prop을 하나 만들어줌\r\n    여기에 전달되는 데이터는 매개변수를 하나 받는 핸들러 함수(saveExpensedataHandler)를 만들어줌\r\n    그 함수는 매개변수를 하나 받을거임\r\n    */\n};\n_s(NewExpense, \"hjPcwFQzoll+xvBLZUCOD7QR/qs=\");\n_c = NewExpense;\nexport default NewExpense; //ExpenseForm에서 모은 데이터를 여기 NewExpense에 가져올거임\n//새로운 값을 받는 컴포넌트?\nvar _c;\n$RefreshReg$(_c, \"NewExpense\");","map":{"version":3,"names":["React","useState","ExpenseForm","jsxDEV","_jsxDEV","NewExpense","props","_s","isEditing","setisEditing","saveExpensedataHandler","enteredExpenseData","expenseData","id","Math","random","toString","onAddExpense","StartEditingHandler","stopEditingHandler","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","onSaveExpenseData","onCancel","_c","$RefreshReg$"],"sources":["C:/REACT/01-starting-setup/src/Components/NewExpenses/NewExpense.js"],"sourcesContent":["import React, {useState} from \"react\";\r\nimport ExpenseForm from \"./ExpenseForm\";\r\nimport \"./NewExpense.css\";\r\n\r\nconst NewExpense = (props) => {\r\n  const [isEditing, setisEditing] = useState(false);\r\n  //처음 화면 떴을 때 입력창 없이 add new expense 버튼만 보여야함 그래서 초기값 false로 줌\r\n  const saveExpensedataHandler = (enteredExpenseData) => {\r\n    /* 입력된 enteredExpenseData가 여기에 저장됨 enteredExpenseData 라는 이름을 보면 \r\n       입력한 데이터를 여기에 전달해준다는걸알수있음 \r\n    */\r\n    const expenseData = {\r\n      ...enteredExpenseData, //매개변수로 받은걸 스프레드 연산자를 이용해서 뿌려줌\r\n      id: Math.random().toString(), //나중을 위해 아이디 하나 추가해줌\r\n    };\r\n    props.onAddExpense(expenseData); //완성된 데이터인 expenseData를 매개변수로 넘겨줌\r\n    setisEditing(false);\r\n  };\r\n\r\n  //버튼눌렀을 때 동작할 핸들러\r\n  const StartEditingHandler = () => {\r\n    setisEditing(true);\r\n  }\r\n\r\n  const stopEditingHandler = () => {\r\n    setisEditing(false);\r\n  }\r\n\r\n  return (\r\n    <div className=\"new-expense\">\r\n      {!isEditing && <button onClick={StartEditingHandler}>Add new Expense</button>}\r\n      {/* isEditing가 트루인경우에는 앞에 not연산자가 있으니까 false가 되면서 뒷부분실행안됨 */}\r\n      {isEditing &&<ExpenseForm onSaveExpenseData={saveExpensedataHandler} onCancel={stopEditingHandler}/>}\r\n      {/* isEditing이 참이면 오른쪽도 실행이 돼서 에디팅창이 열리게됨 */}\r\n      {/* 여기에서 saveExpensedataHandler 함수를 바로 실행할게 아니기 때문에 ()안붙임 */}\r\n    </div>\r\n  );\r\n  /*\r\n    여기에 onSaveExpenseSate라고 prop을 하나 만들어줌\r\n    여기에 전달되는 데이터는 매개변수를 하나 받는 핸들러 함수(saveExpensedataHandler)를 만들어줌\r\n    그 함수는 매개변수를 하나 받을거임\r\n    */\r\n};\r\n\r\nexport default NewExpense; //ExpenseForm에서 모은 데이터를 여기 NewExpense에 가져올거임\r\n//새로운 값을 받는 컴포넌트?\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AACrC,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAO,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,UAAU,GAAIC,KAAK,IAAK;EAAAC,EAAA;EAC5B,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EACjD;EACA,MAAMS,sBAAsB,GAAIC,kBAAkB,IAAK;IACrD;AACJ;AACA;IACI,MAAMC,WAAW,GAAG;MAClB,GAAGD,kBAAkB;MAAE;MACvBE,EAAE,EAAEC,IAAI,CAACC,MAAM,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,CAAE;IAChC,CAAC;;IACDV,KAAK,CAACW,YAAY,CAACL,WAAW,CAAC,CAAC,CAAC;IACjCH,YAAY,CAAC,KAAK,CAAC;EACrB,CAAC;;EAED;EACA,MAAMS,mBAAmB,GAAGA,CAAA,KAAM;IAChCT,YAAY,CAAC,IAAI,CAAC;EACpB,CAAC;EAED,MAAMU,kBAAkB,GAAGA,CAAA,KAAM;IAC/BV,YAAY,CAAC,KAAK,CAAC;EACrB,CAAC;EAED,oBACEL,OAAA;IAAKgB,SAAS,EAAC,aAAa;IAAAC,QAAA,GACzB,CAACb,SAAS,iBAAIJ,OAAA;MAAQkB,OAAO,EAAEJ,mBAAoB;MAAAG,QAAA,EAAC;IAAe;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EAE5ElB,SAAS,iBAAGJ,OAAA,CAACF,WAAW;MAACyB,iBAAiB,EAAEjB,sBAAuB;MAACkB,QAAQ,EAAET;IAAmB;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAGjG,CAAC;EAER;AACF;AACA;AACA;AACA;AACA,CAAC;AAACnB,EAAA,CAtCIF,UAAU;AAAAwB,EAAA,GAAVxB,UAAU;AAwChB,eAAeA,UAAU,CAAC,CAAC;AAC3B;AAAA,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}